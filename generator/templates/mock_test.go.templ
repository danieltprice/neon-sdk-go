package sdk

import "testing"

func Test_newObjectPath(t *testing.T) {
	type args struct {
		s string
	}
	tests := []struct {
		name string
		args args
		want objPath
	}{
		{
			name: "projects",
			args: args{"/projects"},
			want: objPath{"/projects", false},
		},
		{
			name: "trailing slash",
			args: args{"/////"},
			want: objPath{"", false},
		},
		{
			name: "project",
			args: args{"/projects/fooBar"},
			want: objPath{"/projects", false},
		},
		{
			name: "project's branches",
			args: args{"/projects/fooBar/branches"},
			want: objPath{"/projects/branches", false},
		},
		{
			name: "project's branch",
			args: args{"/projects/fooBar/branches/qux"},
			want: objPath{"/projects/branches", false},
		},
		{
			name: "project branch's endpoints",
			args: args{"/projects/fooBar/branches/qux/endpoints"},
			want: objPath{"/projects/branches/endpoints", false},
		},
		{
			name: "project not found",
			args: args{"/projects/notFound/branches/qux/endpoints"},
			want: objPath{"/projects/branches/endpoints", true},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := parsePath(tt.args.s); got != tt.want {
				t.Errorf("parsePath(%s) = %v, want %v", tt.args.s, got, tt.want)
			}
		})
	}
}
